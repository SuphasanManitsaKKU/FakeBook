events {}

http {
  server {
    listen 80;

    client_max_body_size 50M;


    # ✅ Proxy ไปที่ frontend_container ก่อน ถ้า Error ให้ไปที่ Host Machine (localhost)
    location / {
        proxy_intercept_errors on;
        error_page 502 = @fallback_frontend;

        proxy_pass http://frontend_container:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location @fallback_frontend {
        proxy_pass http://host.docker.internal:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ✅ Proxy ไปที่ backend_container ก่อน ถ้า Error ให้ไปที่ Host Machine (localhost)
    location /api/ {
        proxy_intercept_errors on;
        error_page 502 = @fallback_backend;

        proxy_pass http://backend_container:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location @fallback_backend {
        proxy_pass http://host.docker.internal:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ✅ Proxy WebSocket Connection
    location /api/ws {
        proxy_pass http://backend_container:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
  }
}