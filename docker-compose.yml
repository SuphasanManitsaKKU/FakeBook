services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_container
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - mysql
    restart: always  # ✅ ให้ Restart ถ้ามีปัญหาแทน Healthcheck

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    ports:
      - "4200:4200"
    depends_on:
      - backend

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: password
    ports:
      - '3306:3306'
    healthcheck:
      # ✅ ทำให้ MySQL แจ้งว่าพร้อมใช้งานก่อน Spring Boot รัน
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      frontend:
        condition: service_started
      mysql:
        condition: service_healthy

networks:
  default:
    driver: bridge

# docker-compose --env-file .env up --build -d


# cd /Users/suphasan/Desktop/now
# docker-compose up -d
# cd backend
# ./mvnw spring-boot:run
